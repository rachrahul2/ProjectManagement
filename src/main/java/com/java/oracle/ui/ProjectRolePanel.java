package com.java.oracle.ui;

import com.java.oracle.dao.ApplicationUserDAO;
import com.java.oracle.dao.ProjectDAO;
import com.java.oracle.dao.ProjectRoleDAO;
import com.java.oracle.dao.RoleDAO;
import com.java.oracle.entity.ApplicationUser;
import com.java.oracle.entity.Project;
import com.java.oracle.entity.ProjectRole;
import com.java.oracle.entity.Role;
import com.java.oracle.ui.model.ProjectRoleTableModel;
import com.java.oracle.utils.ApplicationContext;
import com.java.oracle.vo.ComboItem;
import com.java.oracle.vo.ProjectRoleVO;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JDialog;
import javax.swing.JOptionPane;

public class ProjectRolePanel extends javax.swing.JPanel {

    private DefaultComboBoxModel cboProjectModel;
    private DefaultComboBoxModel cboEmployeeModel;
    private DefaultComboBoxModel cboRoleModel;

    private ProjectDAO projectDAO;
    private ApplicationUserDAO applicationUserDAO;
    private RoleDAO roleDAO;
    private ProjectRoleDAO projectRoleDAO;
    private JDialog parent;
    private ProjectRole data;

    /**
     * Creates new form ProjectRolePanel
     */
    public ProjectRolePanel(JDialog parent) {
        initComponents();
        this.parent = parent;
        projectDAO = new ProjectDAO(Project.class);
        applicationUserDAO = new ApplicationUserDAO(ApplicationUser.class);
        roleDAO = new RoleDAO(Role.class);
        projectRoleDAO = new ProjectRoleDAO(ProjectRole.class);

        cboEmployeeModel = new DefaultComboBoxModel();
        cboEmployee.setModel(cboEmployeeModel);

        cboProjectModel = new DefaultComboBoxModel();
        cboProject.setModel(cboProjectModel);

        cboRoleModel = new DefaultComboBoxModel();
        cboRole.setModel(cboRoleModel);

        tblProjectRole.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                if (e.getClickCount() >= 2) {
                    int row = tblProjectRole.getSelectedRow();
                    if (row >= 0) {
                        Long id = Long.valueOf(tblProjectRole.getValueAt(row, 0).toString());
                        data = projectRoleDAO.getById(id);
                        loadData(data);
                    }
                }
            }

        });

        initCombobox();
        loadDataList();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        cboProject = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        cboRole = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        cboEmployee = new javax.swing.JComboBox<>();
        btnSave = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProjectRole = new javax.swing.JTable();
        btnCancel = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Project Role"));

        jLabel1.setText("Project");

        cboProject.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel2.setText("Role");

        cboRole.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel3.setText("Employee");

        cboEmployee.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cboProject, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cboRole, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cboEmployee, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnSave)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cboProject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(cboEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cboRole, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSave))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tblProjectRole.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblProjectRole);

        btnCancel.setText("Close");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 490, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnDelete)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCancel))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancel)
                    .addComponent(btnDelete)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed

        if (validateData()) {
            if (data == null) {
                data = new ProjectRole();
            }
            ComboItem project = (ComboItem) cboProject.getSelectedItem();
            ComboItem employee = (ComboItem) cboEmployee.getSelectedItem();
            ComboItem role = (ComboItem) cboRole.getSelectedItem();
            data.setEmployee(employee.getValue());
            data.setProjectId(project.getId());
            data.setRoleId(role.getId());
            if(projectRoleDAO.checkProjectRole(data.getProjectId(), data.getEmployee(), data.getRoleId()) > 0) {
                JOptionPane.showMessageDialog(null, "This role was existed!");
                return;
            }
            if (data.getId() != null) {
                projectRoleDAO.update(data);
            } else {
                projectRoleDAO.save(data);
            }
            JOptionPane.showMessageDialog(null, "Saved!");
            data = null;
            loadDataList();
        }

    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed

        int row = tblProjectRole.getSelectedRow();
        if (row >= 0) {
            Long id = Long.valueOf(tblProjectRole.getValueAt(row, 0).toString());
            projectRoleDAO.delete(id);
            loadDataList();
        } else {
            JOptionPane.showMessageDialog(null, "Select row to delete!");
        }

    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed

        if(parent != null) {
            parent.dispose();
        }
        
    }//GEN-LAST:event_btnCancelActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox<String> cboEmployee;
    private javax.swing.JComboBox<String> cboProject;
    private javax.swing.JComboBox<String> cboRole;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblProjectRole;
    // End of variables declaration//GEN-END:variables

    private boolean validateData() {
        if (cboProject.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(null, "Project is mandatory!");
            return false;
        }
        if (cboEmployee.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(null, "Employee is mandatory!");
            return false;
        }
        if (cboRole.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(null, "Role is mandatory!");
            return false;
        }
        return true;
    }

    private void loadDataList() {
        ApplicationUser applicationUser = ApplicationContext.getLoggedinUser();
        List<ProjectRoleVO> data = projectRoleDAO.getProjectRole(applicationUser);
        ProjectRoleTableModel model = new ProjectRoleTableModel();
        model.addAll(data);
        tblProjectRole.setModel(model);
    }

    private void loadData(ProjectRole projectRole) {
        if (projectRole != null) {
            if (projectRole.getProjectId() != null) {
                Long pId = projectRole.getProjectId();
                for (int i = 0; i < cboProjectModel.getSize(); i++) {
                    if (pId.equals(((ComboItem) cboProjectModel.getElementAt(i)).getId())) {
                        cboProject.setSelectedIndex(i);
                        break;
                    }
                }
            }

            if (projectRole.getEmployee() != null) {
                String employee = projectRole.getEmployee();
                for (int i = 0; i < cboEmployeeModel.getSize(); i++) {
                    if (employee.equals(((ComboItem) cboEmployeeModel.getElementAt(i)).getValue())) {
                        cboEmployee.setSelectedIndex(i);
                        break;
                    }
                }
            }

            if (projectRole.getRoleId() != null) {
                Long roleId = projectRole.getRoleId();
                for (int i = 0; i < cboRoleModel.getSize(); i++) {
                    if (roleId.equals(((ComboItem) cboRoleModel.getElementAt(i)).getId())) {
                        cboRole.setSelectedIndex(i);
                        break;
                    }
                }
            }
        }
    }

    private void initCombobox() {
        ApplicationUser user = ApplicationContext.getLoggedinUser();
        if (user.isAdmin()) {
            List<Project> projects = projectDAO.selectAll();
            List<ApplicationUser> users = applicationUserDAO.selectAll();
            List<Role> roles = roleDAO.selectAll();
            if (projects != null) {
                for (Project p : projects) {
                    cboProjectModel.addElement(new ComboItem(p.getId(), p.getProjectCode()));
                }
            }
            if (users != null) {
                for (ApplicationUser u : users) {
                    cboEmployeeModel.addElement(new ComboItem(u.getId(), u.getAccount()));
                }

            }
            if (roles != null) {
                for (Role r : roles) {
                    cboRoleModel.addElement(new ComboItem(r.getId(), r.getRoleCode()));
                }
            }
        }

    }
}
